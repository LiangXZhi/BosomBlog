<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bosomblog.dao.ExperienceMapper">
  <resultMap id="BaseResultMap" type="com.bosomblog.entity.Experience">
    <id column="exp_id" jdbcType="INTEGER" property="expId" />
    <result column="usersId" jdbcType="INTEGER" property="usersid" />
    <result column="exp_num" jdbcType="INTEGER" property="expNum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    exp_id, usersId, exp_num
  </sql>
  <select id="selectByExample" parameterType="com.bosomblog.entity.ExperienceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from experience
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from experience
    where exp_id = #{expId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from experience
    where exp_id = #{expId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bosomblog.entity.ExperienceExample">
    delete from experience
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bosomblog.entity.Experience">
    insert into experience (exp_id, usersId, exp_num
      )
    values (#{expId,jdbcType=INTEGER}, #{usersid,jdbcType=INTEGER}, #{expNum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bosomblog.entity.Experience">
    insert into experience
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="expId != null">
        exp_id,
      </if>
      <if test="usersid != null">
        usersId,
      </if>
      <if test="expNum != null">
        exp_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="expId != null">
        #{expId,jdbcType=INTEGER},
      </if>
      <if test="usersid != null">
        #{usersid,jdbcType=INTEGER},
      </if>
      <if test="expNum != null">
        #{expNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bosomblog.entity.ExperienceExample" resultType="java.lang.Long">
    select count(*) from experience
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update experience
    <set>
      <if test="record.expId != null">
        exp_id = #{record.expId,jdbcType=INTEGER},
      </if>
      <if test="record.usersid != null">
        usersId = #{record.usersid,jdbcType=INTEGER},
      </if>
      <if test="record.expNum != null">
        exp_num = #{record.expNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update experience
    set exp_id = #{record.expId,jdbcType=INTEGER},
      usersId = #{record.usersid,jdbcType=INTEGER},
      exp_num = #{record.expNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bosomblog.entity.Experience">
    update experience
    <set>
      <if test="usersid != null">
        usersId = #{usersid,jdbcType=INTEGER},
      </if>
      <if test="expNum != null">
        exp_num = #{expNum,jdbcType=INTEGER},
      </if>
    </set>
    where exp_id = #{expId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bosomblog.entity.Experience">
    update experience
    set usersId = #{usersid,jdbcType=INTEGER},
      exp_num = #{expNum,jdbcType=INTEGER}
    where exp_id = #{expId,jdbcType=INTEGER}
  </update>
</mapper>
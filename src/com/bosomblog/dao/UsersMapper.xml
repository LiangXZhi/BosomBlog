<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bosomblog.dao.UsersMapper">
	<resultMap id="BaseResultMap" type="com.bosomblog.entity.Users">
		<id column="usesId" jdbcType="INTEGER" property="usesid" />
		<result column="userpic" jdbcType="VARCHAR" property="userpic" />
		<result column="usersName" jdbcType="VARCHAR" property="usersname" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="sex" jdbcType="VARCHAR" property="sex" />
		<result column="birthday" jdbcType="DATE" property="birthday" />
		<result column="address" jdbcType="VARCHAR" property="address" />
		<result column="intro" jdbcType="VARCHAR" property="intro" />
		<result column="grade" jdbcType="INTEGER" property="grade" />
		<result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
		<result column="banaccount" jdbcType="INTEGER" property="banaccount" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		usesId, userpic, usersName, password, phone, sex, birthday,
		address, intro,
		grade,
		createTime, banaccount
	</sql>

	<!-- 用户等级排行榜 -->
	<select id="orderByGrade" resultMap="BaseResultMap">
		SELECT * FROM users
		ORDER BY grade DESC
		limit 5
	</select>

	<!-- 用户签到排行榜 -->

	<!-- 用户发帖排行榜 -->
	<select id="orderByFt" resultMap="BaseResultMap">
		SELECT usesId usesid,userpic,usersName
		usersname,phone FROM users u,posts
		p WHERE u.usesId=p.usersId GROUP BY p.usersId ORDER BY
		COUNT(p.usersId) desc
	</select>

	<!-- 用户回贴排行榜 -->
	<!-- <select id="orderByGrade" resultMap="BaseResultMap">
		SELECT * FROM users
		ORDER BY grade DESC
		limit 5
	</select> -->

	<!-- 根据用户ID查找用户所有信息 -->
	<select id="queryById" parameterType="int" resultMap="BaseResultMap">
		SELECT
		usesId usesid,userpic,usersName
		usersname,password,phone,sex,birthday,address,
		intro,grade,createTime
		createtime,banaccount FROM users where usesId=#{usersid}
	</select>

	<!-- 根据phone查询用户 -->
	<select id="queryByPhone" parameterType="String" resultMap="BaseResultMap">
		SELECT usesId usesid,userpic,usersName
		usersname,password,phone,sex,birthday,address,
		intro,grade,createTime
		createtime,banaccount FROM users where phone=#{phone}
	</select>

	<!-- 按照昵称和手机号模糊查询 -->
	<select id="selectByKeyExample" parameterType="String"
		resultMap="BaseResultMap">
		select
		*
		from users where 1=1
		and usersName like #{num}
		or phone
		like #{num}
	</select>

	<!-- 查询所有用户信息 -->
	<select id="selectByExample" parameterType="com.bosomblog.entity.UsersExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from users
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>

	<!-- 根据id查单个用户 -->
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from users
		where usesId = #{usesid,jdbcType=INTEGER}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from users
		where usesId = #{usesid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.bosomblog.entity.UsersExample">
		delete from users
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.bosomblog.entity.Users">
		insert into users (usesId,
		userpic, usersName,
		password, phone, sex,
		birthday, address, intro,
		grade, createTime, banaccount
		)
		values (#{usesid,jdbcType=INTEGER},
		#{userpic,jdbcType=VARCHAR},
		#{usersname,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
		#{sex,jdbcType=VARCHAR},
		#{birthday,jdbcType=DATE},
		#{address,jdbcType=VARCHAR},
		#{intro,jdbcType=VARCHAR},
		#{grade,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP},
		#{banaccount,jdbcType=INTEGER}
		)
	</insert>


	<insert id="insertSelective" parameterType="com.bosomblog.entity.Users">
		insert into users
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="usesid != null">
				usesId,
			</if>
			<if test="userpic != null">
				userpic,
			</if>
			<if test="usersname != null">
				usersName,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="birthday != null">
				birthday,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="intro != null">
				intro,
			</if>
			<if test="grade != null">
				grade,
			</if>
			<if test="createtime != null">
				createTime,
			</if>
			<if test="banaccount != null">
				banaccount,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="usesid != null">
				#{usesid,jdbcType=INTEGER},
			</if>
			<if test="userpic != null">
				#{userpic,jdbcType=VARCHAR},
			</if>
			<if test="usersname != null">
				#{usersname,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				#{birthday,jdbcType=DATE},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="intro != null">
				#{intro,jdbcType=VARCHAR},
			</if>
			<if test="grade != null">
				#{grade,jdbcType=INTEGER},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="banaccount != null">
				#{banaccount,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.bosomblog.entity.UsersExample"
		resultType="java.lang.Long">
		select count(*) from users
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>

	<!-- 根据id修改封号 -->
	<update id="updateByPrimaryKeySelective" parameterType="com.bosomblog.entity.Users">
		update users
		<set>
			<if test="userpic != null">
				userpic = #{userpic,jdbcType=VARCHAR},
			</if>
			<if test="usersname != null">
				usersName = #{usersname,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=DATE},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="intro != null">
				intro = #{intro,jdbcType=VARCHAR},
			</if>
			<if test="grade != null">
				grade = #{grade,jdbcType=INTEGER},
			</if>
			<if test="createtime != null">
				createTime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="banaccount != null">
				banaccount = #{banaccount,jdbcType=INTEGER},
			</if>
		</set>
		where usesId = #{usesid,jdbcType=INTEGER}
	</update>

	<!-- 根据用户编号，修改经验 -->
	<update id="updateUserGrade">
		update users
		set grade = grade+#{grade}
		where usesId = #{userid};
	</update>

	<update id="updateByExampleSelective" parameterType="map">
		update users
		<set>
			<if test="record.usesid != null">
				usesId = #{record.usesid,jdbcType=INTEGER},
			</if>
			<if test="record.userpic != null">
				userpic = #{record.userpic,jdbcType=VARCHAR},
			</if>
			<if test="record.usersname != null">
				usersName = #{record.usersname,jdbcType=VARCHAR},
			</if>
			<if test="record.password != null">
				password = #{record.password,jdbcType=VARCHAR},
			</if>
			<if test="record.phone != null">
				phone = #{record.phone,jdbcType=VARCHAR},
			</if>
			<if test="record.sex != null">
				sex = #{record.sex,jdbcType=VARCHAR},
			</if>
			<if test="record.birthday != null">
				birthday = #{record.birthday,jdbcType=DATE},
			</if>
			<if test="record.address != null">
				address = #{record.address,jdbcType=VARCHAR},
			</if>
			<if test="record.intro != null">
				intro = #{record.intro,jdbcType=VARCHAR},
			</if>
			<if test="record.grade != null">
				grade = #{record.grade,jdbcType=INTEGER},
			</if>
			<if test="record.createtime != null">
				createTime = #{record.createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.banaccount != null">
				banaccount = #{record.banaccount,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update users
		set usesId = #{record.usesid,jdbcType=INTEGER},
		userpic =
		#{record.userpic,jdbcType=VARCHAR},
		usersName =
		#{record.usersname,jdbcType=VARCHAR},
		password =
		#{record.password,jdbcType=VARCHAR},
		phone =
		#{record.phone,jdbcType=VARCHAR},
		sex = #{record.sex,jdbcType=VARCHAR},
		birthday = #{record.birthday,jdbcType=DATE},
		address =
		#{record.address,jdbcType=VARCHAR},
		intro =
		#{record.intro,jdbcType=VARCHAR},
		grade =
		#{record.grade,jdbcType=INTEGER},
		createTime =
		#{record.createtime,jdbcType=TIMESTAMP},
		banaccount =
		#{record.banaccount,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>


	<!-- 修改 -->
	<update id="updateByPhone" parameterType="com.bosomblog.entity.Users">
		update users
		<set>
			<if test="userpic != null">
				userpic = #{userpic,jdbcType=VARCHAR},
			</if>
			<if test="usersname != null">
				usersName = #{usersname,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=DATE},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="intro != null">
				intro = #{intro,jdbcType=VARCHAR},
			</if>
			<if test="grade != null">
				grade = #{grade,jdbcType=INTEGER},
			</if>
			<if test="createtime != null">
				createTime = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="banaccount != null">
				banaccount = #{banaccount,jdbcType=INTEGER},
			</if>
		</set>
		where phone = #{phone,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.bosomblog.entity.Users">
		update users
		set
		userpic = #{userpic,jdbcType=VARCHAR},
		usersName =
		#{usersname,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=VARCHAR},
		birthday = #{birthday,jdbcType=DATE},
		address =
		#{address,jdbcType=VARCHAR},
		intro = #{intro,jdbcType=VARCHAR},
		grade =
		#{grade,jdbcType=INTEGER},
		createTime =
		#{createtime,jdbcType=TIMESTAMP},
		banaccount =
		#{banaccount,jdbcType=INTEGER}
		where usesId =
		#{usesid,jdbcType=INTEGER}
	</update>
</mapper>
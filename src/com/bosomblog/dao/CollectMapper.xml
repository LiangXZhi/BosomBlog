<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bosomblog.dao.CollectMapper">
	<resultMap id="BaseResultMap" type="com.bosomblog.entity.Collect">
		<id column="collectId" jdbcType="INTEGER" property="collectid" />
		<result column="usersId" jdbcType="INTEGER" property="usersid" />
		<result column="pid" jdbcType="INTEGER" property="pid" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		collectId, usersId, pid
	</sql>

	<!-- 根据博客ID,查询所有收藏 -->
	<select id="selectCollectByPid" resultMap="BaseResultMap">
		SELECT * FROM collect
		WHERE pid=#{pid}
	</select>

	<!-- 根据用户ID，查询所有博文ID -->
	<select id="selectPidByUid" resultMap="BaseResultMap">
		select * from collect
		where usersId=#{uid}
	</select>

	<select id="selectByExample" parameterType="com.bosomblog.entity.CollectExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from collect
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from collect
		where collectId = #{collectid,jdbcType=INTEGER}
	</select>
	<!-- 根据主键删除收藏信息 -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		collect
		where collectId = #{collectid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.bosomblog.entity.CollectExample">
		delete from collect
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.bosomblog.entity.Collect">
		insert into collect
		(collectId, usersId, pid
		)
		values (#{collectid,jdbcType=INTEGER},
		#{usersid,jdbcType=INTEGER},
		#{pid,jdbcType=INTEGER}
		)
	</insert>

	<!-- 根据用户ID和博文ID添加一条收藏记录 -->
	<insert id="insertSelective" parameterType="com.bosomblog.entity.Collect">
		insert into collect
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="collectid != null">
				collectId,
			</if>
			<if test="usersid != null">
				usersId,
			</if>
			<if test="pid != null">
				pid,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="collectid != null">
				#{collectid,jdbcType=INTEGER},
			</if>
			<if test="usersid != null">
				#{usersid,jdbcType=INTEGER},
			</if>
			<if test="pid != null">
				#{pid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>

	<!-- 根据用户ID和博文ID删除一条收藏记录 -->
	<delete id="deleteSelective" parameterType="com.bosomblog.entity.Collect">
		delete from collect
		where usersId=#{usersid} and pid=#{pid}
	</delete>

	<select id="countByExample" parameterType="com.bosomblog.entity.CollectExample"
		resultType="java.lang.Long">
		select count(*) from collect
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update collect
		<set>
			<if test="record.collectid != null">
				collectId = #{record.collectid,jdbcType=INTEGER},
			</if>
			<if test="record.usersid != null">
				usersId = #{record.usersid,jdbcType=INTEGER},
			</if>
			<if test="record.pid != null">
				pid = #{record.pid,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update collect
		set collectId = #{record.collectid,jdbcType=INTEGER},
		usersId = #{record.usersid,jdbcType=INTEGER},
		pid =
		#{record.pid,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.bosomblog.entity.Collect">
		update collect
		<set>
			<if test="usersid != null">
				usersId = #{usersid,jdbcType=INTEGER},
			</if>
			<if test="pid != null">
				pid = #{pid,jdbcType=INTEGER},
			</if>
		</set>
		where collectId = #{collectid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.bosomblog.entity.Collect">
		update collect
		set
		usersId = #{usersid,jdbcType=INTEGER},
		pid = #{pid,jdbcType=INTEGER}
		where collectId = #{collectid,jdbcType=INTEGER}
	</update>
</mapper>
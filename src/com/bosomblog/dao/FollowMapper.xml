<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bosomblog.dao.FollowMapper">
  <resultMap id="BaseResultMap" type="com.bosomblog.entity.Follow">
    <id column="follow_id" jdbcType="INTEGER" property="followId" />
    <result column="usersId" jdbcType="INTEGER" property="usersid" />
    <result column="follow" jdbcType="INTEGER" property="follow" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
  </resultMap>
  <resultMap id="UserResultMap" type="com.bosomblog.entity.Users">
		<id column="usesId" jdbcType="INTEGER" property="usesid" />
		<result column="userpic" jdbcType="VARCHAR" property="userpic" />
		<result column="usersName" jdbcType="VARCHAR" property="usersname" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="sex" jdbcType="VARCHAR" property="sex" />
		<result column="birthday" jdbcType="DATE" property="birthday" />
		<result column="address" jdbcType="VARCHAR" property="address" />
		<result column="intro" jdbcType="VARCHAR" property="intro" />
		<result column="grade" jdbcType="INTEGER" property="grade" />
		<result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
		<result column="banaccount" jdbcType="INTEGER" property="banaccount" />
	</resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    follow_id, usersId, follow, create_at
  </sql>
  
  <!-- 根据用户ID查询已关注用户 -->
  <select id="queryFollowByid" parameterType="int" resultMap="UserResultMap">
  	SELECT u.usesId usesid,u.userpic,u.usersName usersname FROM users u,follow f WHERE u.usesId=f.follow AND f.usersId=#{usersid}
  </select>
  
  <select id="selectByExample" parameterType="com.bosomblog.entity.FollowExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from follow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from follow
    where follow_id = #{followId,jdbcType=INTEGER}
  </select>
  
  <!-- 取关注 -->
  <delete id="deleteByUsersid" parameterType="com.bosomblog.entity.Follow">
  	delete from follow
    where usersid = #{usersid} and follow=#{follow}
  </delete>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from follow
    where follow_id = #{followId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bosomblog.entity.FollowExample">
    delete from follow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <!-- 加关注 -->
  <insert id="insert" parameterType="com.bosomblog.entity.Follow">
    insert into follow (follow_id, usersId, follow, 
      create_at)
    values (#{followId,jdbcType=INTEGER}, #{usersid,jdbcType=INTEGER}, #{follow,jdbcType=INTEGER}, 
      #{createAt,jdbcType=TIMESTAMP})
  </insert>
  
  
  <insert id="insertSelective" parameterType="com.bosomblog.entity.Follow">
    insert into follow
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="followId != null">
        follow_id,
      </if>
      <if test="usersid != null">
        usersId,
      </if>
      <if test="follow != null">
        follow,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="followId != null">
        #{followId,jdbcType=INTEGER},
      </if>
      <if test="usersid != null">
        #{usersid,jdbcType=INTEGER},
      </if>
      <if test="follow != null">
        #{follow,jdbcType=INTEGER},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bosomblog.entity.FollowExample" resultType="java.lang.Long">
    select count(*) from follow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update follow
    <set>
      <if test="record.followId != null">
        follow_id = #{record.followId,jdbcType=INTEGER},
      </if>
      <if test="record.usersid != null">
        usersId = #{record.usersid,jdbcType=INTEGER},
      </if>
      <if test="record.follow != null">
        follow = #{record.follow,jdbcType=INTEGER},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update follow
    set follow_id = #{record.followId,jdbcType=INTEGER},
      usersId = #{record.usersid,jdbcType=INTEGER},
      follow = #{record.follow,jdbcType=INTEGER},
      create_at = #{record.createAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bosomblog.entity.Follow">
    update follow
    <set>
      <if test="usersid != null">
        usersId = #{usersid,jdbcType=INTEGER},
      </if>
      <if test="follow != null">
        follow = #{follow,jdbcType=INTEGER},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where follow_id = #{followId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bosomblog.entity.Follow">
    update follow
    set usersId = #{usersid,jdbcType=INTEGER},
      follow = #{follow,jdbcType=INTEGER},
      create_at = #{createAt,jdbcType=TIMESTAMP}
    where follow_id = #{followId,jdbcType=INTEGER}
  </update>
</mapper>